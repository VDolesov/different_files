//Создать стек, содержащий целые числа.
//В новый стек вывести сначала четные, потом нечетные числа.
//Порядок следования чисел в новом стеке должен совпадать с первоначальным.
//9: 1 2 3 4 5 6 7 8 9, стало 2 4 6 8 1 3 5 7 9
#include<iostream>

using namespace std;

struct stack	//описание стека
{
	int inf;
	stack* next;
};

void push(stack*& h, int x) //добавление элемента в стек
{	
	stack* r = new stack;	//создание нового элемента
	r->inf = x;	//поле inf = х
	r->next = h;	//следующим элементом является h
	h = r;	//теперь r является головой
}

int pop(stack*& h) //удаление элемента из стека
{	
	int i = h->inf;	//значение первого элемента
	stack* r = h;	//указатель на голову стека
	h = h->next;	//перенос указателя на след.элемент
	delete r;	//удаление первого элемента
	return i;	//возвращение значения
}

void reverse(stack*& h) //переворачивание стека
{	
	stack* head1 = NULL;	//инициализация буферного стека
	while (h)	//пока стек не пуст
		push(head1, pop(h));	//переписывание из одного стека в другой
	h = head1;	//переобозначение указателей
}

stack* result(stack*& h) 
{
	stack* res = NULL;	//инициализация результирующего стека
	stack* h1 = NULL;	//инициализация стека для нечетных чисел
	stack* h2 = NULL;	//инициализация стека для четных чисел
	while (h) 
	{
		int x = pop(h);	//удаление первого элемента
		if (x % 2 == 0) //если элемент четный, то добавляется в соответствующий стек 	
			push(h1, x);
		if (x % 2 == 1) //если нечетный	
			push(h2, x);
	}

	reverse(h1);	//переворачивание стека
	reverse(h2);

	while (h1)	//сначала добавляются нечетные элементы из стека h1 в стек res
		push(res, pop(h1));
	while (h2)	//потом четные из h2 в res
		push(res, pop(h2));

	reverse(res);	//переворачивание стека
	return res;	//возвращение значения
}

int main() 
{
	setlocale(LC_ALL, "RUS");
	int n;
	cout << "Введите количество чисел:\n";
	cin >> n;
	stack* head = NULL;	//инициализация
	int x;
	cout << "Введите числа:\n";
	for (int i = 0; i < n; i++) //заполнение стека
	{	
		cin >> x;
		push(head, x);
	}
	reverse(head);	//переворачивание
	stack* res = result(head);	//запись результата
	cout << "Результат:\n";
	while (res)	//вывод результата на экран
		cout << pop(res) << " ";
	cout << "\n";
	return 0;
}